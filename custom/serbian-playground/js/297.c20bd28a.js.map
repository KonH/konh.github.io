{"version":3,"file":"js/297.c20bd28a.js","mappings":"qMAEM,SAAUA,EAAOC,EAAUC,EAAYC,EAAYC,EAAYC,EAAWC,GAC9E,MAAMC,GAAsBC,EAAAA,EAAAA,IAAkB,YACxCC,GAAmCD,EAAAA,EAAAA,IAAkB,yBACrDE,GAA0BF,EAAAA,EAAAA,IAAkB,gBAElD,OAAQG,EAAAA,EAAAA,OCPVC,EAAAA,EAAAA,IAAAC,EAAAA,GAAA,OAEEC,EAAAA,EAAAA,IAEWP,EAAA,CAFAQ,QAAOd,EAAAe,WAAYC,QAAQ,YAAYC,MAAM,QDUnD,CCZPC,SAAAC,EAAAA,EAAAA,KAGI,IAAuB,EAH3BC,EAAAA,EAAAA,KAAAC,EAAAA,EAAAA,IAGOrB,EAAAsB,UAAU,SAAD,MAHhBC,EAAA,GDiBO,EAAG,CAAC,aCXTV,EAAAA,EAAAA,IAOeJ,EAAA,MAbjBS,SAAAC,EAAAA,EAAAA,KAOI,IAKyB,EALzBN,EAAAA,EAAAA,IAKyBL,EAAA,CAZ7BgB,WAQexB,EAAAyB,mBARf,sBAAAxB,EAAA,KAAAA,EAAA,GAAAyB,GAQe1B,EAAAyB,mBAAkBC,GAC1BC,QAAS3B,EAAA4B,wBACVC,QAAA,GACAZ,MAAM,eDeD,KAAM,EAAG,CAAC,aAAc,eC1BnCM,EAAA,KAeEV,EAAAA,EAAAA,IAEWP,EAAA,CAFAQ,QAAOd,EAAA8B,cAAgBC,SAAU/B,EAAAgC,oBAAqBhB,QAAQ,UAAUC,MAAM,QDoBpF,CCnCPC,SAAAC,EAAAA,EAAAA,KAgBI,IAA4B,EAhBhCC,EAAAA,EAAAA,KAAAC,EAAAA,EAAAA,IAgBOrB,EAAAsB,UAAU,cAAD,MAhBhBC,EAAA,GDwCO,EAAG,CAAC,UAAW,cACjB,GACL,C,kCCfA,GAAeU,EAAAA,EAAAA,IAAgB,CAC7BC,KAAAA,GACE,MAAMC,GAAOC,EAAAA,EAAAA,MACPd,EAAYa,EAAKE,EACvB,MAAO,CACLf,YAEJ,EACAgB,SAAU,KACLC,EAAAA,EAAAA,IAAW,CAAC,yBAA0B,cAEzCX,uBAAAA,GACE,OAAOY,EAAAA,EAAkBC,KAAIC,IAAO,CAClCC,MAAOD,EACPE,KAAMC,KAAKvB,UAAUoB,MAEzB,EAEAjB,mBAAoB,CAClBqB,GAAAA,GACE,OAAOD,KAAKE,sBACd,EACAC,GAAAA,CAAIL,GACFE,KAAKI,6BAA6BN,EACpC,GAGFX,mBAAAA,GACE,OAA0C,IAAnCa,KAAKpB,mBAAmByB,MACjC,GAEFC,QAAS,KACJC,EAAAA,EAAAA,IAAW,CAAC,iBAAkB,iCAEjCrC,UAAAA,GACE8B,KAAKQ,eAAe,WACtB,EAEAvB,aAAAA,GACEe,KAAKQ,eAAe,cACtB,K,UC9DJ,MAAMC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASvD,KAEpE,O","sources":["webpack://serbian-playground/./src/components/GenericTestSelector.vue?c10d","webpack://serbian-playground/./src/components/GenericTestSelector.vue","webpack://serbian-playground/./src/components/GenericTestSelector.vue?42e3"],"sourcesContent":["import { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_b_button = _resolveComponent(\"b-button\")!\n  const _component_b_form_checkbox_group = _resolveComponent(\"b-form-checkbox-group\")!\n  const _component_b_form_group = _resolveComponent(\"b-form-group\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(_component_b_button, {\n      onClick: _ctx.backToMenu,\n      variant: \"secondary\",\n      class: \"mb-3\"\n    }, {\n      default: _withCtx(() => [\n        _createTextVNode(_toDisplayString(_ctx.translate('Back')), 1)\n      ]),\n      _: 1\n    }, 8, [\"onClick\"]),\n    _createVNode(_component_b_form_group, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_b_form_checkbox_group, {\n          modelValue: _ctx.selectedCategories,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((_ctx.selectedCategories) = $event)),\n          options: _ctx.allTranslatedCategories,\n          stacked: \"\",\n          class: \"text-nowrap\"\n        }, null, 8, [\"modelValue\", \"options\"])\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_b_button, {\n      onClick: _ctx.proceedToTest,\n      disabled: _ctx.isStartTestDisabled,\n      variant: \"primary\",\n      class: \"mt-3\"\n    }, {\n      default: _withCtx(() => [\n        _createTextVNode(_toDisplayString(_ctx.translate('StartTest')), 1)\n      ]),\n      _: 1\n    }, 8, [\"onClick\", \"disabled\"])\n  ], 64))\n}","<template>\r\n \r\n  <b-button @click=\"backToMenu\" variant=\"secondary\" class=\"mb-3\">\r\n    {{ translate('Back') }}\r\n  </b-button>\r\n  \r\n  <b-form-group>\r\n    <b-form-checkbox-group\r\n      v-model=\"selectedCategories\"\r\n      :options=\"allTranslatedCategories\"\r\n      stacked\r\n      class=\"text-nowrap\"\r\n    ></b-form-checkbox-group>\r\n  </b-form-group>\r\n  \r\n  <b-button @click=\"proceedToTest\" :disabled=\"isStartTestDisabled\" variant=\"primary\" class=\"mt-3\">\r\n    {{ translate('StartTest') }}\r\n  </b-button>\r\n\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { AllTestCategories, TestCategory } from '@/store';\r\nimport { defineComponent } from 'vue';\r\nimport { useI18n } from 'vue-i18n';\r\nimport { mapActions, mapGetters } from 'vuex';\r\n\r\nexport default defineComponent({\r\n  setup() {\r\n    const i18n = useI18n();\r\n    const translate = i18n.t;\r\n    return {\r\n      translate\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapGetters(['selectedTestCategories', 'langStyle']),\r\n    \r\n    allTranslatedCategories() {\r\n      return AllTestCategories.map(category => ({\r\n        value: category,\r\n        text: this.translate(category)\r\n      }));\r\n    },\r\n\r\n    selectedCategories: {\r\n      get(): TestCategory[] {\r\n        return this.selectedTestCategories;\r\n      },\r\n      set(value: TestCategory[]) {\r\n        this.updateSelectedTestCategories(value);\r\n      }\r\n    },\r\n\r\n    isStartTestDisabled(): boolean {\r\n      return this.selectedCategories.length === 0;\r\n    }\r\n  },\r\n  methods: {\r\n    ...mapActions(['updateAppState', 'updateSelectedTestCategories']),\r\n\r\n    backToMenu() {\r\n      this.updateAppState('mainMenu');\r\n    },\r\n\r\n    proceedToTest() {\r\n      this.updateAppState('genericTest');\r\n    }\r\n  }\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n</style>","import { render } from \"./GenericTestSelector.vue?vue&type=template&id=04444e5f&ts=true\"\nimport script from \"./GenericTestSelector.vue?vue&type=script&lang=ts\"\nexport * from \"./GenericTestSelector.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["render","_ctx","_cache","$props","$setup","$data","$options","_component_b_button","_resolveComponent","_component_b_form_checkbox_group","_component_b_form_group","_openBlock","_createElementBlock","_Fragment","_createVNode","onClick","backToMenu","variant","class","default","_withCtx","_createTextVNode","_toDisplayString","translate","_","modelValue","selectedCategories","$event","options","allTranslatedCategories","stacked","proceedToTest","disabled","isStartTestDisabled","defineComponent","setup","i18n","useI18n","t","computed","mapGetters","AllTestCategories","map","category","value","text","this","get","selectedTestCategories","set","updateSelectedTestCategories","length","methods","mapActions","updateAppState","__exports__"],"sourceRoot":""}