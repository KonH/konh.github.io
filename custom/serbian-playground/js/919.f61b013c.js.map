{"version":3,"file":"js/919.f61b013c.js","mappings":"qMAEA,MAAMA,EAAa,CCUVC,MAAM,aDTTC,EAAa,CCYPD,MAAM,eDVZ,SAAUE,EAAOC,EAAUC,EAAYC,EAAYC,EAAYC,EAAWC,GAC9E,MAAMC,GAAsBC,EAAAA,EAAAA,IAAkB,YAE9C,OAAQC,EAAAA,EAAAA,OAAcC,EAAAA,EAAAA,IAAoBC,EAAAA,GAAW,KAAM,ECP3DC,EAAAA,EAAAA,IAEM,aADJA,EAAAA,EAAAA,IAAoC,WAAAC,EAAAA,EAAAA,IAA7BZ,EAAAa,UAAU,aAAD,MAGlBF,EAAAA,EAAAA,IAEM,aADJA,EAAAA,EAAAA,IAAyC,UAAAC,EAAAA,EAAAA,IAAnCZ,EAAAa,UAAU,mBAAoB,IAAC,IDQnCC,EAAAA,EAAAA,ICRuC,KAACF,EAAAA,EAAAA,IAAGZ,EAAAe,gBAAc,MAE7DJ,EAAAA,EAAAA,IAEM,aADJA,EAAAA,EAAAA,IAAuC,UAAAC,EAAAA,EAAAA,IAAjCZ,EAAAa,UAAU,iBAAkB,IAAC,IDSjCC,EAAAA,EAAAA,ICTqC,KAACF,EAAAA,EAAAA,IAAGZ,EAAAgB,cAAe,MAAEJ,EAAAA,EAAAA,IAAGZ,EAAAiB,qBAAsB,MACvF,MAEAN,EAAAA,EAAAA,IAOQ,QAPRf,EAOQ,EANNe,EAAAA,EAAAA,IAKQ,gBDIHH,EAAAA,EAAAA,KAAW,ICRdC,EAAAA,EAAAA,IAGKC,EAAAA,GAAA,MAAAQ,EAAAA,EAAAA,IAH0BlB,EAAAmB,eAAc,CAAjCC,EAAMC,MDSNb,EAAAA,EAAAA,OCTZC,EAAAA,EAAAA,IAGK,MAH2Ca,IAAKD,GAAQ,EAC3DV,EAAAA,EAAAA,IAAuD,KAAvDb,GAAuDc,EAAAA,EAAAA,IAA5BZ,EAAAa,UAAUQ,IAAY,IAAC,IAClDV,EAAAA,EAAAA,IAAmD,WAAAC,EAAAA,EAAAA,IAA5CZ,EAAAuB,8BAA8BH,IAAQ,IAAC,ODW1C,WCNVI,EAAAA,EAAAA,IAEWlB,EAAA,CAFAmB,QAAOzB,EAAA0B,WAAYC,QAAQ,YAAY9B,MAAM,QDanD,CACD+B,SAASC,EAAAA,EAAAA,ICbX,IAAuB,EDcnBf,EAAAA,EAAAA,KAAiBF,EAAAA,EAAAA,ICdlBZ,EAAAa,UAAU,SAAD,KDgBViB,EAAG,GACF,EAAG,CAAC,aACN,GACL,C,wBCRA,GAAeC,EAAAA,EAAAA,IAAgB,CAC7BC,KAAAA,GACE,MAAMC,GAAOC,EAAAA,EAAAA,MACPrB,EAAYoB,EAAKE,EACvB,MAAO,CACLtB,YAEJ,EACAuB,SAAU,KACLC,EAAAA,EAAAA,IAAW,CAAC,oBAEfC,WAAAA,GACE,OAAOC,KAAKC,eACd,EAEAzB,cAAAA,GACE,OAAOwB,KAAKD,YAAYvB,cAC1B,EAEAC,YAAAA,GACE,OAAOuB,KAAKD,YAAYtB,YAC1B,EAEAG,cAAAA,GACE,OAAOoB,KAAKD,YAAYnB,cAC1B,EAEAF,mBAAAA,GACE,OAAOsB,KAAKE,sBAAsBF,KAAKvB,aAAcuB,KAAKxB,eAC5D,GAEF2B,QAAS,KACJC,EAAAA,EAAAA,IAAW,CAAC,mBAEfjB,UAAAA,GACEa,KAAKK,eAAe,WACtB,EAEArB,6BAAAA,CAA8BH,GAC5B,OAAOmB,KAAKE,sBAAsBrB,EAAKJ,aAAcI,EAAKL,eAC5D,EAEA0B,qBAAAA,CAAsBzB,EAAsBD,GAC1C,OAAOA,EAAiB,EAAI8B,KAAKC,MAAM9B,EAAeD,EAAiB,KAAO,CAChF,K,UCxEJ,MAAMgC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAAShD,KAEpE,O","sources":["webpack://serbian-playground/./src/components/TestResults.vue?ab37","webpack://serbian-playground/./src/components/TestResults.vue","webpack://serbian-playground/./src/components/TestResults.vue?22f4"],"sourcesContent":["import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"mt-2 mb-3\" }\nconst _hoisted_2 = { class: \"text-nowrap\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_b_button = _resolveComponent(\"b-button\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", null, [\n      _createElementVNode(\"h2\", null, _toDisplayString(_ctx.translate('Finished')), 1)\n    ]),\n    _createElementVNode(\"div\", null, [\n      _createElementVNode(\"b\", null, _toDisplayString(_ctx.translate('TotalQuestions')) + \":\", 1),\n      _createTextVNode(\" \" + _toDisplayString(_ctx.totalQuestions), 1)\n    ]),\n    _createElementVNode(\"div\", null, [\n      _createElementVNode(\"b\", null, _toDisplayString(_ctx.translate('RightAnswers')) + \":\", 1),\n      _createTextVNode(\" \" + _toDisplayString(_ctx.rightAnswers) + \" (\" + _toDisplayString(_ctx.rightAnswersPercent) + \"%) \", 1)\n    ]),\n    _createElementVNode(\"table\", _hoisted_1, [\n      _createElementVNode(\"tbody\", null, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.testCategories, (data, category) => {\n          return (_openBlock(), _createElementBlock(\"tr\", { key: category }, [\n            _createElementVNode(\"td\", _hoisted_2, _toDisplayString(_ctx.translate(category)) + \":\", 1),\n            _createElementVNode(\"td\", null, _toDisplayString(_ctx.rightAnswersPercentByCategory(data)) + \"%\", 1)\n          ]))\n        }), 128))\n      ])\n    ]),\n    _createVNode(_component_b_button, {\n      onClick: _ctx.backToMenu,\n      variant: \"secondary\",\n      class: \"mb-3\"\n    }, {\n      default: _withCtx(() => [\n        _createTextVNode(_toDisplayString(_ctx.translate('Back')), 1)\n      ]),\n      _: 1\n    }, 8, [\"onClick\"])\n  ], 64))\n}","<template>\r\n  <div>\r\n    <h2>{{ translate('Finished') }}</h2>\r\n  </div>\r\n  \r\n  <div>\r\n    <b>{{ translate('TotalQuestions') }}:</b> {{ totalQuestions }}\r\n  </div>\r\n  <div>\r\n    <b>{{ translate('RightAnswers') }}:</b> {{ rightAnswers }} ({{ rightAnswersPercent }}%)\r\n  </div>\r\n\r\n  <table class=\"mt-2 mb-3\">\r\n    <tbody>\r\n      <tr v-for=\"(data, category) in testCategories\" :key=\"category\">\r\n        <td class=\"text-nowrap\">{{ translate(category) }}:</td>\r\n        <td>{{ rightAnswersPercentByCategory(data) }}%</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n\r\n  <b-button @click=\"backToMenu\" variant=\"secondary\" class=\"mb-3\">\r\n    {{ translate('Back') }}\r\n  </b-button>\r\n\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { TestData, TestCategoryData } from '@/store';\r\nimport { defineComponent } from 'vue';\r\nimport { useI18n } from 'vue-i18n';\r\nimport { mapActions, mapGetters } from 'vuex';\r\n\r\nexport default defineComponent({\r\n  setup() {\r\n    const i18n = useI18n();\r\n    const translate = i18n.t;\r\n    return {\r\n      translate\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapGetters(['lastTestResults']),\r\n\r\n    testResults() {\r\n      return this.lastTestResults as TestData;\r\n    },\r\n\r\n    totalQuestions() {\r\n      return this.testResults.totalQuestions;\r\n    },\r\n\r\n    rightAnswers() {\r\n      return this.testResults.rightAnswers;\r\n    },\r\n\r\n    testCategories() {\r\n      return this.testResults.testCategories;\r\n    },\r\n\r\n    rightAnswersPercent() {\r\n      return this.calculateRightPercent(this.rightAnswers, this.totalQuestions);\r\n    },\r\n  },\r\n  methods: {\r\n    ...mapActions(['updateAppState']),\r\n\r\n    backToMenu() {\r\n      this.updateAppState('mainMenu');\r\n    },\r\n\r\n    rightAnswersPercentByCategory(data: TestCategoryData) {\r\n      return this.calculateRightPercent(data.rightAnswers, data.totalQuestions);\r\n    },\r\n\r\n    calculateRightPercent(rightAnswers: number, totalQuestions: number) {\r\n      return totalQuestions > 0 ? Math.round(rightAnswers / totalQuestions * 100) : 0;\r\n    },\r\n  }\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n</style>","import { render } from \"./TestResults.vue?vue&type=template&id=19583b45&ts=true\"\nimport script from \"./TestResults.vue?vue&type=script&lang=ts\"\nexport * from \"./TestResults.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["_hoisted_1","class","_hoisted_2","render","_ctx","_cache","$props","$setup","$data","$options","_component_b_button","_resolveComponent","_openBlock","_createElementBlock","_Fragment","_createElementVNode","_toDisplayString","translate","_createTextVNode","totalQuestions","rightAnswers","rightAnswersPercent","_renderList","testCategories","data","category","key","rightAnswersPercentByCategory","_createVNode","onClick","backToMenu","variant","default","_withCtx","_","defineComponent","setup","i18n","useI18n","t","computed","mapGetters","testResults","this","lastTestResults","calculateRightPercent","methods","mapActions","updateAppState","Math","round","__exports__"],"sourceRoot":""}